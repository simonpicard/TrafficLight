State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 0 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 0 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerEast.waitingTime<=0 TimerEast.waitingTime-TimerSouth.waitingTime<=0 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-LightController1.x<=0 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: CarGeneratorEast.AcceptCar -> CarGeneratorEast.AcceptCar {carLight[location] != GREEN && queueIndex[location] != QUEUE_SIZE && location != W && genNumber != MAX_GEN_NUMBER[location]; request!; queue[location][queueIndex[location]] = L, queueIndex[location]++, genNumber++;} TimerEast.NotWaiting -> TimerEast.NotWaitingTooMuch1 {1; request?; waitingTime = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 1 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 0 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerSouth.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-LightController1.x<=0 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: CarGeneratorSouth.AcceptCar -> CarGeneratorSouth.AcceptCar {carLight[location] != GREEN && queueIndex[location] != QUEUE_SIZE && location != E && genNumber != MAX_GEN_NUMBER[location]; request!; queue[location][queueIndex[location]] = R, queueIndex[location]++, genNumber++;} TimerSouth.NotWaiting -> TimerSouth.NotWaitingTooMuch1 {1; request?; waitingTime = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 1 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerEast.waitingTime<=0 TimerWest.waitingTime-LightController1.x<=0 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: CarGeneratorEast.AcceptCar -> CarGeneratorEast.AcceptCar {carLight[location] != GREEN && queueIndex[location] != QUEUE_SIZE && location != S && genNumber != MAX_GEN_NUMBER[location]; request!; queue[location][queueIndex[location]] = U, queueIndex[location]++, genNumber++;} TimerEast.NotWaitingTooMuch1 -> TimerEast.NotWaitingTooMuch2 {1; request?; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch2 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 1 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 2 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerEast.waitingTime<=0 TimerWest.waitingTime-LightController1.x<=0 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch2 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 1 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 2 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerEast.waitingTime<=0 TimerWest.waitingTime-LightController1.x<=0 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: LightController1.TakeDecision -> LightController1.TakeRegularDecision {urgentQueueIndex == 0 && (pedestrianCrossingButton == true || queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0); 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch2 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.TakeRegularDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 1 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 2 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerEast.waitingTime<=0 TimerWest.waitingTime-LightController1.x<=0 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: CarGeneratorEast.AcceptCar -> CarGeneratorEast.LightGreen {1; carLightGreen?; crossingTime = 0;} LightController1.TakeRegularDecision -> LightController1.CarEast {!(pedestrianCrossingButton == true) && queueIndex[E] != 0; lightGreen[E]!; carLight[E] = GREEN, x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.LightGreen CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch2 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.CarEast pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 1 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 2 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-LightController1.x<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerEast.waitingTime<=0 TimerWest.waitingTime-PedestrianGeneratorEast.crossin<=0 LightController1.x-t(0)<=0 

Transition: CarGeneratorEast.LightGreen -> CarGeneratorEast.CarCrossing {1; not_waiting!; 1;} TimerEast.NotWaitingTooMuch2 -> TimerEast.NotWaitingTooMuch1 {1; not_waiting?; waitingTime = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.CarCrossing CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.CarEast pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 1 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 2 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=0 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-PedestrianGeneratorEast.crossin<=0 LightController1.x-t(0)<=0 

Transition: LightController1.CarEast -> LightController1.CarEastLeft {queue[E][0] == L; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.CarCrossing CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.CarEastLeft pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 1 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 2 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=0 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-PedestrianGeneratorEast.crossin<=0 LightController1.x-t(0)<=0 

Transition: CarGeneratorSouth.AcceptCar -> CarGeneratorSouth.LightGreen {1; carLightGreen?; crossingTime = 0;} LightController1.CarEastLeft -> LightController1.CarEastLeftSouthRight {queueIndex[S] != 0 && queue[S][0] == R; lightGreen[S]!; carLight[S] = GREEN;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.CarCrossing CarGeneratorSouth.LightGreen CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.CarEastLeftSouthRight pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 1 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 1 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 2 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=0 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-PedestrianGeneratorEast.crossin<=0 LightController1.x-t(0)<=0 

Transition: CarGeneratorSouth.LightGreen -> CarGeneratorSouth.CarCrossing {1; not_waiting!; 1;} TimerSouth.NotWaitingTooMuch1 -> TimerSouth.NotWaiting {1; not_waiting?; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.CarCrossing CarGeneratorSouth.CarCrossing CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.CarEastLeftSouthRight pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 1 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 1 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 2 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=3 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=0 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-PedestrianGeneratorEast.crossin<=0 LightController1.x-CarGeneratorEast.crossingTime<=0 

Transition: CarGeneratorWest.AcceptCar -> CarGeneratorWest.AcceptCar {carLight[location] != GREEN && queueIndex[location] != QUEUE_SIZE && location != E && genNumber != MAX_GEN_NUMBER[location]; request!; queue[location][queueIndex[location]] = R, queueIndex[location]++, genNumber++;} TimerWest.NotWaiting -> TimerWest.NotWaitingTooMuch1 {1; request?; waitingTime = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.CarCrossing CarGeneratorSouth.CarCrossing CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.CarEastLeftSouthRight pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 1 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 1 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 2 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=3 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerEast.waitingTime-LightController1.x<=0 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=0 

Transition: PedestrianGeneratorEast.Empty -> PedestrianGeneratorEast.PushButton {genNumber != MAX_GEN_NUMBER[P]; request!; pedestrianCrossingButton = true, genNumber++;} TimerPedestrian.NotWaiting -> TimerPedestrian.NotWaitingTooMuch1 {1; request?; waitingTime = 0;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.CarCrossing CarGeneratorSouth.CarCrossing CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.CarEastLeftSouthRight pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 1 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 1 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 2 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=3 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=0 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=0 

Transition: CarGeneratorSouth.CarCrossing -> CarGeneratorSouth.TakeDecision {crossingTime >= CAR_CROSSING_TIME; release!; queue[location][0] = queue[location][1], queueIndex[location]--;} LightController1.CarEastLeftSouthRight -> LightController1.CarEastLeftSouthRight2_1 {1; release[S]?; carLight[S] = RED;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.CarCrossing CarGeneratorSouth.TakeDecision CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.CarEastLeftSouthRight2_1 pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 2 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-3 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=-3 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=4 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=0 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-t(0)<=3 LightController1.x-t(0)<=3 

Transition: CarGeneratorSouth.TakeDecision -> CarGeneratorSouth.AcceptCar {carLight[location] != GREEN || queueIndex[location] == 0; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.CarCrossing CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.CarEastLeftSouthRight2_1 pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 2 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-3 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=-3 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=4 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=0 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-t(0)<=3 LightController1.x-t(0)<=3 

Transition: CarGeneratorEast.CarCrossing -> CarGeneratorEast.TakeDecision {crossingTime >= CAR_CROSSING_TIME; release!; queue[location][0] = queue[location][1], queueIndex[location]--;} LightController1.CarEastLeftSouthRight2_1 -> LightController1.CarEastLeftSouthRight2_2 {1; release[E]?; carLight[E] = RED;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.TakeDecision CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.CarEastLeftSouthRight2_2 pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-3 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=-3 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=4 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=0 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-t(0)<=3 LightController1.x-t(0)<=3 

Transition: LightController1.CarEastLeftSouthRight2_2 -> LightController1.CarEastLeftSouthRight3 {1; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.TakeDecision CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.CarEastLeftSouthRight3 pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-3 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=-3 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=4 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=0 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-t(0)<=3 LightController1.x-t(0)<=3 

Transition: LightController1.CarEastLeftSouthRight3 -> LightController1.CarEast2Second {1; 0; x = 0;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.TakeDecision CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.CarEast2Second pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-3 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=-3 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=4 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=3 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-t(0)<=3 LightController1.x-t(0)<=0 

Transition: CarGeneratorEast.TakeDecision -> CarGeneratorEast.AcceptCar {carLight[location] != GREEN || queueIndex[location] == 0; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.CarEast2Second pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-3 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=6 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=3 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=3 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=-3 

Transition: LightController1.CarEast2Second -> LightController1.Initial {x == CAR_CROSSING_TIME; 0; x = 0;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.Initial pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-6 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=3 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=6 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.TakeDecision pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-6 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=3 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=6 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=-6 

Transition: LightController1.TakeDecision -> LightController1.TakeRegularDecision {urgentQueueIndex == 0 && (pedestrianCrossingButton == true || queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0); 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.TakeRegularDecision pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-6 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=3 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=0 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-LightController1.x<=6 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=-6 

Transition: PedestrianGeneratorEast.PushButton -> PedestrianGeneratorEast.LightGreen {1; pedestrianLightGreen?; crossingTime = 0;} LightController1.TakeRegularDecision -> LightController1.PedestrianGreen {pedestrianCrossingButton == true; lightGreen[P]!; pedestrianLight = GREEN, x = 0;} 

State: PedestrianGeneratorEast.LightGreen CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.PedestrianGreen pedestrianCrossingButton = 1 pedestrianLight = 1 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-6 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-LightController1.x<=0 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=3 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=1 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-t(0)<=0 

Transition: PedestrianGeneratorEast.LightGreen -> PedestrianGeneratorEast.Cross {1; not_waiting!; 1;} TimerPedestrian.NotWaitingTooMuch1 -> TimerPedestrian.NotWaiting {1; not_waiting?; 1;} 

State: PedestrianGeneratorEast.Cross CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.PedestrianGreen pedestrianCrossingButton = 1 pedestrianLight = 1 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=3 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=0 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=3 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=1 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: PedestrianGeneratorEast.Cross -> PedestrianGeneratorEast.Empty {crossingTime >= PEDESTRIAN_CROSSING_TIME; release!; pedestrianCrossingButton = false;} LightController1.PedestrianGreen -> LightController1.PedestrianRed {1; release[P]?; x = 0, pedestrianLight = RED;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.PedestrianRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-3 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=3 CarGeneratorEast.crossingTime-t(0)<=10 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=3 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=1 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-PedestrianGeneratorEast.crossin<=-3 

Transition: TimerEast.NotWaitingTooMuch1 -> TimerEast.WaitingTooMuch1 {waitingTime >= max_waiting_time; 0; urgentQueue[urgentQueueIndex] = location, urgentQueueIndex++;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.WaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.PedestrianRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-10 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=6 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=3 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=3 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=1 TimerPedestrian.waitingTime-TimerWest.waitingTime<=0 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-t(0)<=10 LightController1.x-PedestrianGeneratorEast.crossin<=-3 

Transition: PedestrianGeneratorEast.Empty -> PedestrianGeneratorEast.PushButton {genNumber != MAX_GEN_NUMBER[P]; request!; pedestrianCrossingButton = true, genNumber++;} TimerPedestrian.NotWaiting -> TimerPedestrian.NotWaitingTooMuch1 {1; request?; waitingTime = 0;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.WaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.PedestrianRed pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=6 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=3 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorEast.crossingTime-TimerWest.waitingTime<=3 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=1 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-t(0)<=10 LightController1.x-PedestrianGeneratorEast.crossin<=-3 

Transition: LightController1.PedestrianRed -> LightController1.Initial {x == PEDESTRIAN_CROSSING_TIME; 0; x = 0;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.WaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.Initial pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-6 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 PedestrianGeneratorEast.crossin-LightController1.x<=6 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorEast.crossingTime-TimerWest.waitingTime<=3 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=1 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-t(0)<=10 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.WaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.TakeDecision pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-6 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 PedestrianGeneratorEast.crossin-LightController1.x<=6 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorEast.crossingTime-TimerWest.waitingTime<=3 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=1 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-t(0)<=10 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.TakeDecision -> LightController1.TakeUrgentDecision {urgentQueueIndex != 0; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.WaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.TakeUrgentDecision pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-6 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 PedestrianGeneratorEast.crossin-LightController1.x<=6 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorEast.crossingTime-TimerWest.waitingTime<=3 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=1 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-t(0)<=10 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: CarGeneratorEast.AcceptCar -> CarGeneratorEast.LightGreen {1; carLightGreen?; crossingTime = 0;} LightController1.TakeUrgentDecision -> LightController1.UrgentCarEastGreen {urgentQueue[0] == E; lightGreen[E]!; pedestrianLight = RED, carLight[E] = GREEN, carLight[S] = RED, carLight[W] = RED, x = 0;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.LightGreen CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.WaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.UrgentCarEastGreen pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-6 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-LightController1.x<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=1 TimerPedestrian.waitingTime-CarGeneratorSouth.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-t(0)<=10 LightController1.x-t(0)<=0 

Transition: CarGeneratorEast.LightGreen -> CarGeneratorEast.CarCrossing {1; not_waiting!; 1;} TimerEast.WaitingTooMuch1 -> TimerEast.NotWaiting {1; not_waiting?; urgentQueue[0] = urgentQueue[1], urgentQueue[1] = urgentQueue[2], urgentQueue[2] = urgentQueue[3], urgentQueueIndex--;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.CarCrossing CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.UrgentCarEastGreen pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorEast.crossingTime-LightController1.x<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=1 TimerPedestrian.waitingTime-CarGeneratorSouth.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-t(0)<=10 LightController1.x-CarGeneratorEast.crossingTime<=0 

Transition: TimerWest.NotWaitingTooMuch1 -> TimerWest.WaitingTooMuch1 {waitingTime >= max_waiting_time; 0; urgentQueue[urgentQueueIndex] = location, urgentQueueIndex++;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.CarCrossing CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.WaitingTooMuch1 LightController1.UrgentCarEastGreen pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 2 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=-10 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-t(0)<=3 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorEast.crossingTime-LightController1.x<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=1 TimerPedestrian.waitingTime-CarGeneratorSouth.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-CarGeneratorEast.crossingTime<=0 

Transition: CarGeneratorEast.CarCrossing -> CarGeneratorEast.TakeDecision {crossingTime >= CAR_CROSSING_TIME; release!; queue[location][0] = queue[location][1], queueIndex[location]--;} LightController1.UrgentCarEastGreen -> LightController1.UrgentCarEastRed {1; release[E]?; x = 0, carLight[E] = RED;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.TakeDecision CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.WaitingTooMuch1 LightController1.UrgentCarEastRed pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 2 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-9 t(0)-CarGeneratorEast.crossingTime<=-3 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-LightController1.x<=3 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=1 TimerPedestrian.waitingTime-CarGeneratorSouth.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-t(0)<=13 LightController1.x-t(0)<=0 

Transition: CarGeneratorEast.TakeDecision -> CarGeneratorEast.AcceptCar {carLight[location] != GREEN || queueIndex[location] == 0; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.WaitingTooMuch1 LightController1.UrgentCarEastRed pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 2 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-3 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-t(0)<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorEast.crossingTime-LightController1.x<=3 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=1 TimerPedestrian.waitingTime-CarGeneratorSouth.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-CarGeneratorEast.crossingTime<=-3 

Transition: LightController1.UrgentCarEastRed -> LightController1.Initial {x == CAR_CROSSING_TIME; 0; x = 0;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.WaitingTooMuch1 LightController1.Initial pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 2 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-6 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorEast.crossingTime-LightController1.x<=6 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=1 TimerPedestrian.waitingTime-CarGeneratorSouth.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-CarGeneratorEast.crossingTime<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.WaitingTooMuch1 LightController1.TakeDecision pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 2 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-6 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorEast.crossingTime-LightController1.x<=6 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=1 TimerPedestrian.waitingTime-CarGeneratorSouth.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-CarGeneratorEast.crossingTime<=-6 

Transition: LightController1.TakeDecision -> LightController1.TakeUrgentDecision {urgentQueueIndex != 0; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.WaitingTooMuch1 LightController1.TakeUrgentDecision pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 2 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-6 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorEast.crossingTime-LightController1.x<=6 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=1 TimerPedestrian.waitingTime-CarGeneratorSouth.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorWest.crossingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-CarGeneratorEast.crossingTime<=-6 

Transition: CarGeneratorWest.AcceptCar -> CarGeneratorWest.LightGreen {1; carLightGreen?; crossingTime = 0;} LightController1.TakeUrgentDecision -> LightController1.UrgentCarWestGreen {urgentQueue[0] == W; lightGreen[W]!; pedestrianLight = RED, carLight[E] = RED, carLight[S] = RED, carLight[W] = GREEN, x = 0;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.LightGreen TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.WaitingTooMuch1 LightController1.UrgentCarWestGreen pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 1 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 2 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-6 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-LightController1.x<=0 TimerPedestrian.waitingTime-CarGeneratorSouth.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-t(0)<=0 

Transition: CarGeneratorWest.LightGreen -> CarGeneratorWest.CarCrossing {1; not_waiting!; 1;} TimerWest.WaitingTooMuch1 -> TimerWest.NotWaiting {1; not_waiting?; urgentQueue[0] = urgentQueue[1], urgentQueue[1] = urgentQueue[2], urgentQueue[2] = urgentQueue[3], urgentQueueIndex--;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.CarCrossing TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.UrgentCarWestGreen pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 1 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorEast.crossingTime-CarGeneratorWest.crossingTime<=7 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-t(0)<=3 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 CarGeneratorWest.crossingTime-LightController1.x<=0 TimerPedestrian.waitingTime-t(0)<=10 TimerPedestrian.waitingTime-CarGeneratorSouth.crossingTime<=-10 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-CarGeneratorWest.crossingTime<=0 

Transition: CarGeneratorWest.CarCrossing -> CarGeneratorWest.TakeDecision {crossingTime >= CAR_CROSSING_TIME; release!; queue[location][0] = queue[location][1], queueIndex[location]--;} LightController1.UrgentCarWestGreen -> LightController1.UrgentCarWestRed {1; release[W]?; x = 0, carLight[W] = RED;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.TakeDecision TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.UrgentCarWestRed pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-9 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=-3 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-LightController1.x<=3 TimerPedestrian.waitingTime-t(0)<=10 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-t(0)<=0 

Transition: CarGeneratorWest.TakeDecision -> CarGeneratorWest.AcceptCar {carLight[location] != GREEN || queueIndex[location] == 0; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.UrgentCarWestRed pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=-3 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 CarGeneratorWest.crossingTime-LightController1.x<=3 TimerPedestrian.waitingTime-t(0)<=10 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-CarGeneratorWest.crossingTime<=-3 

Transition: TimerPedestrian.NotWaitingTooMuch1 -> TimerPedestrian.WaitingTooMuch1 {waitingTime >= max_waiting_time; 0; urgentQueue[urgentQueueIndex] = location, urgentQueueIndex++;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.WaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.UrgentCarWestRed pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 3 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=-10 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-t(0)<=6 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 CarGeneratorWest.crossingTime-LightController1.x<=3 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-CarGeneratorWest.crossingTime<=-3 

Transition: LightController1.UrgentCarWestRed -> LightController1.Initial {x == CAR_CROSSING_TIME; 0; x = 0;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.WaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 3 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=-6 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-t(0)<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 CarGeneratorWest.crossingTime-LightController1.x<=6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-CarGeneratorWest.crossingTime<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.WaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 3 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=-6 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-t(0)<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 CarGeneratorWest.crossingTime-LightController1.x<=6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-CarGeneratorWest.crossingTime<=-6 

Transition: LightController1.TakeDecision -> LightController1.TakeUrgentDecision {urgentQueueIndex != 0; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.WaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.TakeUrgentDecision pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 3 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=-6 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=-6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-t(0)<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 CarGeneratorWest.crossingTime-LightController1.x<=6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-CarGeneratorWest.crossingTime<=-6 

Transition: PedestrianGeneratorEast.PushButton -> PedestrianGeneratorEast.LightGreen {1; pedestrianLightGreen?; crossingTime = 0;} LightController1.TakeUrgentDecision -> LightController1.UrgentPedestrianGreen {urgentQueue[0] == P; lightGreen[P]!; pedestrianLight = GREEN, carLight[E] = RED, carLight[S] = RED, carLight[W] = RED, x = 0;} 

State: PedestrianGeneratorEast.LightGreen CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.WaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.UrgentPedestrianGreen pedestrianCrossingButton = 1 pedestrianLight = 1 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 3 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 1 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=-6 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-LightController1.x<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=-12 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-t(0)<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-t(0)<=0 

Transition: PedestrianGeneratorEast.LightGreen -> PedestrianGeneratorEast.Cross {1; not_waiting!; 1;} TimerPedestrian.WaitingTooMuch1 -> TimerPedestrian.NotWaiting {1; not_waiting?; urgentQueue[0] = urgentQueue[1], urgentQueue[1] = urgentQueue[2], urgentQueue[2] = urgentQueue[3], urgentQueueIndex--;} 

State: PedestrianGeneratorEast.Cross CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.UrgentPedestrianGreen pedestrianCrossingButton = 1 pedestrianLight = 1 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=3 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=-12 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: PedestrianGeneratorEast.Cross -> PedestrianGeneratorEast.Empty {crossingTime >= PEDESTRIAN_CROSSING_TIME; release!; pedestrianCrossingButton = false;} LightController1.UrgentPedestrianGreen -> LightController1.UrgentPedestrianRed {1; release[P]?; x = 0, pedestrianLight = RED;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.UrgentPedestrianRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-3 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=3 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=-12 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-PedestrianGeneratorEast.crossin<=-3 

Transition: LightController1.UrgentPedestrianRed -> LightController1.Initial {x == PEDESTRIAN_CROSSING_TIME; 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-6 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=7 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=6 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=-12 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-6 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=7 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=6 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=-12 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.TakeDecision -> LightController1.Initial {!(urgentQueueIndex != 0 || pedestrianCrossingButton == true || (queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0)); 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=-12 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-t(0)<=1 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=-12 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-t(0)<=1 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.TakeDecision -> LightController1.Initial {!(urgentQueueIndex != 0 || pedestrianCrossingButton == true || (queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0)); 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=8 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=-12 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-t(0)<=1 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=8 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=-12 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-t(0)<=1 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.TakeDecision -> LightController1.Initial {!(urgentQueueIndex != 0 || pedestrianCrossingButton == true || (queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0)); 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=9 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=-12 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-t(0)<=1 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 1 queue[0][1] = 1 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=9 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=-12 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=0 CarGeneratorSouth.crossingTime-TimerWest.waitingTime<=3 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorWest.crossingTime-CarGeneratorEast.crossingTime<=-6 TimerPedestrian.waitingTime-CarGeneratorWest.crossingTime<=7 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerSouth.waitingTime-CarGeneratorSouth.crossingTime<=1 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=10 LightController1.x-t(0)<=1 LightController1.x-PedestrianGeneratorEast.crossin<=-6 
