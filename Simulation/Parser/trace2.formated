State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 0 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 0 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerEast.waitingTime<=0 TimerEast.waitingTime-TimerSouth.waitingTime<=0 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-LightController1.x<=0 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: CarGeneratorEast.AcceptCar -> CarGeneratorEast.AcceptCar {carLight[location] != GREEN && queueIndex[location] != QUEUE_SIZE && location != W && genNumber != MAX_GEN_NUMBER[location]; request!; queue[location][queueIndex[location]] = L, queueIndex[location]++, genNumber++;} TimerEast.NotWaiting -> TimerEast.NotWaitingTooMuch1 {1; request?; waitingTime = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 1 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 0 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerSouth.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-LightController1.x<=0 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 1 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 0 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerSouth.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-LightController1.x<=0 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: LightController1.TakeDecision -> LightController1.CarCrossing {urgentQueueIndex == 0 && pedestrianCrossingButton == false && (queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0); 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.CarCrossing pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 1 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 0 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=1 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=0 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerSouth.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-LightController1.x<=0 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: CarGeneratorEast.AcceptCar -> CarGeneratorEast.CarCrossing {1; carLightGreen?; crossingTime = 0;} LightController1.CarCrossing -> LightController1.CarEastGreen {queueIndex[E] != 0; lightGreen[E]!; carLight[E] = GREEN, x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.CarCrossing CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.CarEastGreen pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 1 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 0 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 0 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=3 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=0 CarGeneratorEast.crossingTime-LightController1.x<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerSouth.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-PedestrianGeneratorEast.crossin<=0 LightController1.x-CarGeneratorEast.crossingTime<=0 

Transition: CarGeneratorWest.AcceptCar -> CarGeneratorWest.AcceptCar {carLight[location] != GREEN && queueIndex[location] != QUEUE_SIZE && location != E && genNumber != MAX_GEN_NUMBER[location]; request!; queue[location][queueIndex[location]] = R, queueIndex[location]++, genNumber++;} TimerWest.NotWaiting -> TimerWest.NotWaitingTooMuch1 {1; request?; waitingTime = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.CarCrossing CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaiting TimerWest.NotWaitingTooMuch1 LightController1.CarEastGreen pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 0 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 1 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 0 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=3 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=0 CarGeneratorEast.crossingTime-LightController1.x<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-TimerSouth.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=0 

Transition: CarGeneratorSouth.AcceptCar -> CarGeneratorSouth.AcceptCar {carLight[location] != GREEN && queueIndex[location] != QUEUE_SIZE && location != E && genNumber != MAX_GEN_NUMBER[location]; request!; queue[location][queueIndex[location]] = R, queueIndex[location]++, genNumber++;} TimerSouth.NotWaiting -> TimerSouth.NotWaitingTooMuch1 {1; request?; waitingTime = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.CarCrossing CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.CarEastGreen pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 1 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=3 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=0 CarGeneratorEast.crossingTime-LightController1.x<=0 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=0 

Transition: CarGeneratorEast.CarCrossing -> CarGeneratorEast.TakeDecision {crossingTime >= CAR_CROSSING_TIME; release!; queue[location][0] = queue[location][1], queueIndex[location]--;} TimerEast.NotWaitingTooMuch1 -> TimerEast.NotWaiting {1; release?; 1;} LightController1.CarEastGreen -> LightController1.CarEastRed {1; release[E]?; x = 0, carLight[E] = RED;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.TakeDecision CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.CarEastRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 1 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-3 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=-3 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=4 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-LightController1.x<=3 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-t(0)<=3 LightController1.x-t(0)<=0 

Transition: CarGeneratorEast.TakeDecision -> CarGeneratorEast.AcceptCar {carLight[location] != GREEN || queueIndex[location] == 0; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.CarEastRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 1 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-3 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=3 CarGeneratorEast.crossingTime-LightController1.x<=3 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=-3 

Transition: LightController1.CarEastRed -> LightController1.Initial {x == CAR_CROSSING_TIME; 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 1 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-6 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=3 CarGeneratorEast.crossingTime-LightController1.x<=6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=-6 

Transition: CarGeneratorEast.AcceptCar -> CarGeneratorEast.AcceptCar {carLight[location] != GREEN && queueIndex[location] != QUEUE_SIZE && location != W && genNumber != MAX_GEN_NUMBER[location]; request!; queue[location][queueIndex[location]] = L, queueIndex[location]++, genNumber++;} TimerEast.NotWaiting -> TimerEast.NotWaitingTooMuch1 {1; request?; waitingTime = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 0 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=3 CarGeneratorEast.crossingTime-LightController1.x<=6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-TimerPedestrian.waitingTime<=0 TimerPedestrian.waitingTime-PedestrianGeneratorEast.crossin<=0 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=-6 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=-6 

Transition: PedestrianGeneratorEast.Empty -> PedestrianGeneratorEast.PushButton {genNumber != MAX_GEN_NUMBER[P]; request!; pedestrianCrossingButton = true, genNumber++;} TimerPedestrian.NotWaiting -> TimerPedestrian.NotWaitingTooMuch1 {1; request?; waitingTime = 0;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.Initial pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=3 CarGeneratorEast.crossingTime-LightController1.x<=6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=0 TimerPedestrian.waitingTime-TimerEast.waitingTime<=0 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=-6 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.TakeDecision pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=1 PedestrianGeneratorEast.crossin-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=3 CarGeneratorEast.crossingTime-LightController1.x<=6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=0 TimerPedestrian.waitingTime-TimerEast.waitingTime<=0 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=-6 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-CarGeneratorEast.crossingTime<=-6 

Transition: PedestrianGeneratorEast.PushButton -> PedestrianGeneratorEast.Cross {1; pedestrianLightGreen?; crossingTime = 0;} LightController1.TakeDecision -> LightController1.PedestrianGreen {urgentQueueIndex == 0 && pedestrianCrossingButton == true; lightGreen[P]!; pedestrianLight = GREEN, x = 0;} 

State: PedestrianGeneratorEast.Cross CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.PedestrianGreen pedestrianCrossingButton = 1 pedestrianLight = 1 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=3 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=0 PedestrianGeneratorEast.crossin-LightController1.x<=0 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=3 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=1 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-TimerEast.waitingTime<=0 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=-6 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: PedestrianGeneratorEast.Cross -> PedestrianGeneratorEast.Empty {crossingTime >= PEDESTRIAN_CROSSING_TIME; release!; pedestrianCrossingButton = false;} TimerPedestrian.NotWaitingTooMuch1 -> TimerPedestrian.NotWaiting {1; release?; 1;} LightController1.PedestrianGreen -> LightController1.PedestrianRed {1; release[P]?; x = 0, pedestrianLight = RED;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.PedestrianRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-3 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=6 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=0 PedestrianGeneratorEast.crossin-LightController1.x<=3 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=3 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=1 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-TimerEast.waitingTime<=0 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=-6 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-PedestrianGeneratorEast.crossin<=-3 

Transition: LightController1.PedestrianRed -> LightController1.Initial {x == PEDESTRIAN_CROSSING_TIME; 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-6 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=7 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=0 PedestrianGeneratorEast.crossin-LightController1.x<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=3 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=1 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-TimerEast.waitingTime<=0 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=-6 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-6 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=7 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=0 PedestrianGeneratorEast.crossin-LightController1.x<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=3 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=1 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-TimerEast.waitingTime<=0 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=-6 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.TakeDecision -> LightController1.CarCrossing {urgentQueueIndex == 0 && pedestrianCrossingButton == false && (queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0); 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.CarCrossing pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-6 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=7 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=0 PedestrianGeneratorEast.crossin-LightController1.x<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-CarGeneratorSouth.crossingTime<=0 CarGeneratorEast.crossingTime-TimerSouth.waitingTime<=3 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=1 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-TimerEast.waitingTime<=0 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=-6 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=0 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: CarGeneratorEast.AcceptCar -> CarGeneratorEast.CarCrossing {1; carLightGreen?; crossingTime = 0;} LightController1.CarCrossing -> LightController1.CarEastGreen {queueIndex[E] != 0; lightGreen[E]!; carLight[E] = GREEN, x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.CarCrossing CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaitingTooMuch1 TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.CarEastGreen pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 1 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 1 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=7 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=0 CarGeneratorEast.crossingTime-t(0)<=3 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorEast.crossingTime-LightController1.x<=0 CarGeneratorSouth.crossingTime-PedestrianGeneratorEast.crossin<=8 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-TimerEast.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=1 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-PedestrianGeneratorEast.crossin<=7 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorEast.crossingTime<=0 

Transition: CarGeneratorEast.CarCrossing -> CarGeneratorEast.TakeDecision {crossingTime >= CAR_CROSSING_TIME; release!; queue[location][0] = queue[location][1], queueIndex[location]--;} TimerEast.NotWaitingTooMuch1 -> TimerEast.NotWaiting {1; release?; 1;} LightController1.CarEastGreen -> LightController1.CarEastRed {1; release[E]?; x = 0, carLight[E] = RED;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.TakeDecision CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.CarEastRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-9 t(0)-CarGeneratorEast.crossingTime<=-3 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=10 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=0 CarGeneratorEast.crossingTime-LightController1.x<=3 CarGeneratorSouth.crossingTime-PedestrianGeneratorEast.crossin<=8 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-TimerEast.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=1 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-PedestrianGeneratorEast.crossin<=7 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-t(0)<=0 

Transition: CarGeneratorEast.TakeDecision -> CarGeneratorEast.AcceptCar {carLight[location] != GREEN || queueIndex[location] == 0; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.CarEastRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 1 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-3 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=7 PedestrianGeneratorEast.crossin-TimerPedestrian.waitingTime<=0 CarGeneratorEast.crossingTime-t(0)<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorEast.crossingTime-LightController1.x<=3 CarGeneratorSouth.crossingTime-PedestrianGeneratorEast.crossin<=8 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-TimerEast.waitingTime<=0 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=1 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-PedestrianGeneratorEast.crossin<=7 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorEast.crossingTime<=-3 

Transition: PedestrianGeneratorEast.Empty -> PedestrianGeneratorEast.PushButton {genNumber != MAX_GEN_NUMBER[P]; request!; pedestrianCrossingButton = true, genNumber++;} TimerPedestrian.NotWaiting -> TimerPedestrian.NotWaitingTooMuch1 {1; request?; waitingTime = 0;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.CarEastRed pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=7 PedestrianGeneratorEast.crossin-TimerEast.waitingTime<=0 CarGeneratorEast.crossingTime-t(0)<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorEast.crossingTime-LightController1.x<=3 CarGeneratorSouth.crossingTime-PedestrianGeneratorEast.crossin<=8 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=1 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-PedestrianGeneratorEast.crossin<=7 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorEast.crossingTime<=-3 

Transition: LightController1.CarEastRed -> LightController1.Initial {x == CAR_CROSSING_TIME; 0; x = 0;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.Initial pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-6 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=7 PedestrianGeneratorEast.crossin-TimerEast.waitingTime<=0 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-LightController1.x<=6 CarGeneratorSouth.crossingTime-PedestrianGeneratorEast.crossin<=8 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=1 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-PedestrianGeneratorEast.crossin<=7 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorEast.crossingTime<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.PushButton CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.TakeDecision pedestrianCrossingButton = 1 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=-6 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=7 PedestrianGeneratorEast.crossin-TimerEast.waitingTime<=0 CarGeneratorEast.crossingTime-t(0)<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-LightController1.x<=6 CarGeneratorSouth.crossingTime-PedestrianGeneratorEast.crossin<=8 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-PedestrianGeneratorEast.crossin<=1 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-PedestrianGeneratorEast.crossin<=7 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorEast.crossingTime<=-6 

Transition: PedestrianGeneratorEast.PushButton -> PedestrianGeneratorEast.Cross {1; pedestrianLightGreen?; crossingTime = 0;} LightController1.TakeDecision -> LightController1.PedestrianGreen {urgentQueueIndex == 0 && pedestrianCrossingButton == true; lightGreen[P]!; pedestrianLight = GREEN, x = 0;} 

State: PedestrianGeneratorEast.Cross CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaitingTooMuch1 TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.PedestrianGreen pedestrianCrossingButton = 1 pedestrianLight = 1 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=3 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=0 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=15 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=8 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-PedestrianGeneratorEast.crossin<=0 

Transition: PedestrianGeneratorEast.Cross -> PedestrianGeneratorEast.Empty {crossingTime >= PEDESTRIAN_CROSSING_TIME; release!; pedestrianCrossingButton = false;} TimerPedestrian.NotWaitingTooMuch1 -> TimerPedestrian.NotWaiting {1; release?; 1;} LightController1.PedestrianGreen -> LightController1.PedestrianRed {1; release[P]?; x = 0, pedestrianLight = RED;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.PedestrianRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-3 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=6 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=3 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=15 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=8 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-PedestrianGeneratorEast.crossin<=-3 

Transition: LightController1.PedestrianRed -> LightController1.Initial {x == PEDESTRIAN_CROSSING_TIME; 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-6 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=7 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=15 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=8 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-6 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=7 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=15 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=8 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: LightController1.TakeDecision -> LightController1.CarCrossing {urgentQueueIndex == 0 && pedestrianCrossingButton == false && (queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0); 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.CarCrossing pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-6 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=7 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-LightController1.x<=6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=15 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=0 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=8 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=0 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-PedestrianGeneratorEast.crossin<=-6 

Transition: CarGeneratorWest.AcceptCar -> CarGeneratorWest.CarCrossing {1; carLightGreen?; crossingTime = 0;} LightController1.CarCrossing -> LightController1.CarWestGreen {!(queueIndex[E] != 0 || queueIndex[E] != 0) && queueIndex[W] != 0; lightGreen[W]!; carLight[W] = GREEN, x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.CarCrossing TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaitingTooMuch1 LightController1.CarWestGreen pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 1 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 2 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 1 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=15 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=8 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-t(0)<=3 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-LightController1.x<=0 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorWest.crossingTime<=0 

Transition: CarGeneratorWest.CarCrossing -> CarGeneratorWest.TakeDecision {crossingTime >= CAR_CROSSING_TIME; release!; queue[location][0] = queue[location][1], queueIndex[location]--;} TimerWest.NotWaitingTooMuch1 -> TimerWest.NotWaiting {1; release?; 1;} LightController1.CarWestGreen -> LightController1.CarWestRed {1; release[W]?; x = 0, carLight[W] = RED;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.TakeDecision TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.CarWestRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=-9 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=-3 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-t(0)<=10 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=15 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=8 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-LightController1.x<=3 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-t(0)<=0 

Transition: CarGeneratorWest.TakeDecision -> CarGeneratorWest.AcceptCar {carLight[location] != GREEN || queueIndex[location] == 0; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.CarWestRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=-3 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=15 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=8 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-t(0)<=6 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-LightController1.x<=3 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorWest.crossingTime<=-3 

Transition: LightController1.CarWestRed -> LightController1.Initial {x == CAR_CROSSING_TIME; 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=-6 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=15 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=8 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-t(0)<=7 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-LightController1.x<=6 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorWest.crossingTime<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=-6 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=15 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=8 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-t(0)<=7 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-LightController1.x<=6 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorWest.crossingTime<=-6 

Transition: LightController1.TakeDecision -> LightController1.CarCrossing {urgentQueueIndex == 0 && pedestrianCrossingButton == false && (queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0); 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.CarCrossing pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=-6 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorEast.crossingTime<=15 CarGeneratorSouth.crossingTime-TimerEast.waitingTime<=8 CarGeneratorSouth.crossingTime-TimerSouth.waitingTime<=4 CarGeneratorWest.crossingTime-t(0)<=7 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-LightController1.x<=6 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-CarGeneratorSouth.crossingTime<=-6 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-CarGeneratorSouth.crossingTime<=0 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorWest.crossingTime<=-6 

Transition: CarGeneratorSouth.AcceptCar -> CarGeneratorSouth.CarCrossing {1; carLightGreen?; crossingTime = 0;} LightController1.CarCrossing -> LightController1.CarSouthGreen {!(queueIndex[E] != 0) && queueIndex[S] != 0; lightGreen[S]!; carLight[S] = GREEN, x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.CarCrossing CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaitingTooMuch1 TimerWest.NotWaiting LightController1.CarSouthGreen pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 1 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 2 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 1 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-t(0)<=3 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=0 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=7 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorSouth.crossingTime<=0 

Transition: CarGeneratorSouth.CarCrossing -> CarGeneratorSouth.TakeDecision {crossingTime >= CAR_CROSSING_TIME; release!; queue[location][0] = queue[location][1], queueIndex[location]--;} TimerSouth.NotWaitingTooMuch1 -> TimerSouth.NotWaiting {1; release?; 1;} LightController1.CarSouthGreen -> LightController1.CarSouthRed {1; release[S]?; x = 0, carLight[S] = RED;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.TakeDecision CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.CarSouthRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=-3 t(0)-CarGeneratorWest.crossingTime<=-9 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=3 CarGeneratorWest.crossingTime-t(0)<=10 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-t(0)<=0 

Transition: CarGeneratorSouth.TakeDecision -> CarGeneratorSouth.AcceptCar {carLight[location] != GREEN || queueIndex[location] == 0; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.CarSouthRed pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=-3 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-t(0)<=6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=3 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=7 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorSouth.crossingTime<=-3 

Transition: LightController1.CarSouthRed -> LightController1.Initial {x == CAR_CROSSING_TIME; 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=-6 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-t(0)<=7 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=6 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=7 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorSouth.crossingTime<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=-6 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-t(0)<=7 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=6 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=7 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-CarGeneratorSouth.crossingTime<=-6 

Transition: LightController1.TakeDecision -> LightController1.Initial {!(urgentQueueIndex != 0 || pedestrianCrossingButton == true || (queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0)); 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=7 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=7 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-t(0)<=1 LightController1.x-CarGeneratorSouth.crossingTime<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=7 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=7 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-t(0)<=1 LightController1.x-CarGeneratorSouth.crossingTime<=-6 

Transition: LightController1.TakeDecision -> LightController1.Initial {!(urgentQueueIndex != 0 || pedestrianCrossingButton == true || (queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0)); 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=8 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=7 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-t(0)<=1 LightController1.x-CarGeneratorSouth.crossingTime<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=8 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=7 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-t(0)<=1 LightController1.x-CarGeneratorSouth.crossingTime<=-6 

Transition: LightController1.TakeDecision -> LightController1.Initial {!(urgentQueueIndex != 0 || pedestrianCrossingButton == true || (queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0)); 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=9 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=7 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-t(0)<=1 LightController1.x-CarGeneratorSouth.crossingTime<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=9 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=7 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-t(0)<=1 LightController1.x-CarGeneratorSouth.crossingTime<=-6 

Transition: LightController1.TakeDecision -> LightController1.Initial {!(urgentQueueIndex != 0 || pedestrianCrossingButton == true || (queueIndex[E] != 0 || queueIndex[S] != 0 || queueIndex[W] != 0)); 0; x = 0;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.Initial pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=10 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=7 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-t(0)<=1 LightController1.x-CarGeneratorSouth.crossingTime<=-6 

Transition: LightController1.Initial -> LightController1.TakeDecision {1; 0; 1;} 

State: PedestrianGeneratorEast.Empty CarGeneratorEast.AcceptCar CarGeneratorSouth.AcceptCar CarGeneratorWest.AcceptCar TimerPedestrian.NotWaiting TimerEast.NotWaiting TimerSouth.NotWaiting TimerWest.NotWaiting LightController1.TakeDecision pedestrianCrossingButton = 0 pedestrianLight = 0 carLight[0] = 0 carLight[1] = 0 carLight[2] = 0 queue[0][0] = 0 queue[0][1] = 0 queue[1][0] = 0 queue[1][1] = 0 queue[2][0] = 0 queue[2][1] = 0 queueIndex[0] = 0 queueIndex[1] = 0 queueIndex[2] = 0 urgentQueue[0] = 0 urgentQueue[1] = 0 urgentQueue[2] = 0 urgentQueue[3] = 0 urgentQueueIndex = 0 PedestrianGeneratorEast.genNumb = 2 CarGeneratorEast.location = 0 CarGeneratorEast.genNumber = 2 CarGeneratorSouth.location = 1 CarGeneratorSouth.genNumber = 1 CarGeneratorWest.location = 2 CarGeneratorWest.genNumber = 1 TimerPedestrian.location = 3 TimerEast.location = 0 TimerSouth.location = 1 TimerWest.location = 2 t(0)-PedestrianGeneratorEast.crossin<=0 t(0)-CarGeneratorEast.crossingTime<=0 t(0)-CarGeneratorSouth.crossingTime<=0 t(0)-CarGeneratorWest.crossingTime<=0 t(0)-TimerPedestrian.waitingTime<=0 t(0)-TimerEast.waitingTime<=0 t(0)-TimerSouth.waitingTime<=0 t(0)-TimerWest.waitingTime<=0 t(0)-LightController1.x<=0 PedestrianGeneratorEast.crossin-CarGeneratorEast.crossingTime<=-6 PedestrianGeneratorEast.crossin-CarGeneratorWest.crossingTime<=7 CarGeneratorEast.crossingTime-PedestrianGeneratorEast.crossin<=7 CarGeneratorEast.crossingTime-TimerPedestrian.waitingTime<=6 CarGeneratorEast.crossingTime-TimerEast.waitingTime<=-6 CarGeneratorSouth.crossingTime-CarGeneratorWest.crossingTime<=-6 CarGeneratorSouth.crossingTime-LightController1.x<=10 CarGeneratorWest.crossingTime-PedestrianGeneratorEast.crossin<=-6 CarGeneratorWest.crossingTime-CarGeneratorSouth.crossingTime<=7 TimerPedestrian.waitingTime-CarGeneratorEast.crossingTime<=-3 TimerEast.waitingTime-CarGeneratorEast.crossingTime<=8 TimerEast.waitingTime-TimerSouth.waitingTime<=-3 TimerSouth.waitingTime-TimerWest.waitingTime<=0 TimerWest.waitingTime-CarGeneratorEast.crossingTime<=14 TimerWest.waitingTime-TimerEast.waitingTime<=7 TimerWest.waitingTime-TimerSouth.waitingTime<=3 LightController1.x-t(0)<=1 LightController1.x-CarGeneratorSouth.crossingTime<=-6 
